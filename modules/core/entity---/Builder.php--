<?
namespace Entity;

use \Helpers\CArrayHelper;

class Builder extends \DB\Builder{
    protected function validateFields($arFields, $arData){
        $arErrors = array();
        
        foreach($arFields AS $obField){
            $fieldName          = $obField->getFieldName();
            $obValidateResult   = $obField->validate($arData[$fieldName], $arData);
            
            if($obValidateResult !== true && $obValidateResult instanceof Field\Error){
                $arErrors[$fieldName] = array(
                    "code"      => $obValidateResult->getCode(),
                    "message"   => $obValidateResult->getMessage()
                );
            }
        }

        return count($arErrors) ? $arErrors : true;
    }
    
    protected function getColumnsSql(){
        $tableName = $this->alias ? $this->alias : $this->from ;
        
        $this->arColumns = CArrayHelper::map($this->arColumns, function($column) use($tableName){
            if(is_string($column) && strpos($column, ".") === false){
                $column = $tableName . "." . $column;
            }
            
            return $column;
        });
        
        return parent::getColumnsSql();
    }
}
?>